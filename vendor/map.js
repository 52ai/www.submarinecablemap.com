// Generated by CoffeeScript 2.3.2
(function() {
  window.SubmarineCable = {};

  SubmarineCable.Map = (function() {
    class Map {
      showCables() {
        this.cables = new google.maps.FusionTablesLayer({
          query: {
            select: 'coordinates',
            from: this.cables_table_id
          },
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 1
              }
            }
          ],
          suppressInfoWindows: true,
          styleId: 1
        });
        return this.cables.setMap(this.gmap);
      }

      showLandingPoints() {
        this.landing_points = new google.maps.FusionTablesLayer({
          query: {
            select: 'coordinates',
            from: this.landing_points_table_id
          },
          suppressInfoWindows: true,
          styleId: 1
        });
        return this.landing_points.setMap(this.gmap);
      }

      selectCable(id, desc, is_map_clicked = false) {
        var d;
        // Cable Select Event
        this.infoBox.close();
        this.cables.setOptions({
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 0.1
              }
            },
            {
              where: `id = '${id}'`,
              polylineOptions: {
                strokeColor: "#a81120",
                strokeOpacity: 1.0
              }
            }
          ]
        });
        this.landing_points.setQuery({
          select: 'coordinates',
          from: this.landing_points_table_id,
          where: `id IN (${((function() {
            var i, len, results;
            results = [];
            for (i = 0, len = desc.length; i < len; i++) {
              d = desc[i];
              results.push(`'${d.id}'`);
            }
            return results;
          })()).join()})`
        });
        return this.boundMap(desc);
      }

      selectCountry(cables, latlons) {
        var d;
        // Country Select Event
        this.infoBox.close();
        this.cables.setOptions({
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 0.1
              }
            },
            {
              where: `cable_id IN (${((function() {
                var i,
            len,
            results;
                results = [];
                for (i = 0, len = cables.length; i < len; i++) {
                  d = cables[i];
                  results.push(`${d.cable_id}`);
                }
                return results;
              })()).join()})`,
              polylineOptions: {
                strokeOpacity: 1.0
              }
            }
          ]
        });
        this.landing_points.setQuery({
          select: 'coordinates',
          from: this.landing_points_table_id,
          where: `cable_id IN (${((function() {
            var i, len, results;
            results = [];
            for (i = 0, len = cables.length; i < len; i++) {
              d = cables[i];
              results.push(`${d.cable_id}`);
            }
            return results;
          })()).join()})`
        });
        return this.boundMap(latlons);
      }

      selectRfs(data) {
        var d;
        // RFS Select Event
        this.infoBox.close();
        this.cables.setOptions({
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 0.1
              }
            },
            {
              where: `rfs CONTAINS '${data.rfs.toString()}'`,
              polylineOptions: {
                strokeOpacity: 1.0
              }
            }
          ]
        });
        return this.landing_points.setQuery({
          select: 'coordinates',
          from: this.landing_points_table_id,
          where: `cable_id IN (${((function() {
            var i, len, ref, results;
            ref = data.cables;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              d = ref[i];
              results.push(`${d.cable_id}`);
            }
            return results;
          })()).join()})`
        });
      }

      boundMap(desc) {
        var bounds, i, len, value;
        bounds = new google.maps.LatLngBounds();
        for (i = 0, len = desc.length; i < len; i++) {
          value = desc[i];
          bounds.extend(new google.maps.LatLng(value.latlon.split(',')[0], value.latlon.split(',')[1]));
        }
        this.gmap.fitBounds(bounds);
        if (this.gmap.getZoom() > 5) {
          return this.gmap.setZoom(this.gmap.getZoom() - 2);
        }
      }

      selectLandingPoint(name, latLng) {
        // Landing Point Select Event
        this.cables.setOptions({
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 1
              }
            }
          ]
        });
        this.landing_points.setQuery({
          select: 'coordinates',
          from: this.landing_points_table_id
        });
        this.infoBox.close();
        this.gmap.panTo(latLng);
        this.infoBox.setContent(`<div class="infoBoxContent"><div class="infoBoxPointer"></div>${name}</div>`);
        this.infoBox.setPosition(latLng);
        return this.infoBox.open(this.gmap);
      }

      resetMap() {
        this.cables.setOptions({
          styles: [
            {
              polylineOptions: {
                strokeOpacity: 1
              }
            }
          ]
        });
        this.landing_points.setQuery({
          select: 'coordinates',
          from: this.landing_points_table_id
        });
        return this.infoBox.close();
      }

      resetBounds() {
        this.gmap.setZoom(2);
        return this.gmap.setCenter(new google.maps.LatLng(30.0, -30.0));
      }

      setEvents() {
        // Map Event
        google.maps.event.addListener(this.gmap, 'click', (event) => {
          // @analytics('Map', 'Click', 'On Map')
          return jQuery(location).attr('href', "#/");
        });
        // google.maps.event.addListener @gmap, 'zoom_changed', (event) =>
        //   console.log @gmap.getZoom()

        // Cable Event
        google.maps.event.addListener(this.cables, 'click', (event) => {
          // Cable Click Event?
          // @analytics('Cable', 'Click', event.row.id.value)
          return jQuery(location).attr('href', `#/submarine-cable/${event.row.id.value}`);
        });
        // LandingPoint Event
        return google.maps.event.addListener(this.landing_points, 'click', (event) => {
          // Landing Point Click Event?
          // @analytics('Landing Point', 'Click', event.row.id.value)
          return jQuery(location).attr('href', `#/landing-point/${event.row.id.value}`);
        });
      }

      isMobile() {
        var error;
        try {
          return window.matchMedia("only screen and (max-width:736px)").matches;
        } catch (error1) {
          error = error1;
          return false;
        }
      }

      analytics(category, action, label) {}

      // _gaq.push(['_trackEvent', category, action, label]) if _gaq
      constructor(element, config) {
        this.element = element;
        this.config = config;
        this.landing_points_table_id = this.config.fusiontables_landingpoints_id;
        this.cables_table_id = this.config.fusiontables_cable_id;
        this.creation_time = this.config.creation_time;
        this.gmap = new google.maps.Map(document.getElementById(this.element), {
          zoom: this.isMobile() ? 1 : 3,
          maptiks_id: "Submarine Cable Map",
          maxZoom: 8,
          minZoom: 2,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
          styles: SubmarineCable.Map.mapStyles,
          center: new google.maps.LatLng(30.0, -30.0),
          streetViewControl: false,
          mapTypeControl: false,
          zoomControlOptions: {
            position: google.maps.ControlPosition.TOP_LEFT
          },
          disableDefaultUI: this.isMobile() ? true : false
        });
        this.infoBox = new InfoBox({
          closeBoxURL: "",
          alignBottom: true,
          pixelOffset: new google.maps.Size(-60, -15)
        });
        this.showCables();
        this.showLandingPoints();
        this.setEvents();
        return this;
      }

    };

    // @landing_points_table_id = "1Cl54ggURDqPMvVSuxaQM5mPinrdeDq9FDCGfg9T4"
    // @cables_table_id = "1lObSCM2_KCXIcbCfm_rbilwftWBbxAKszNyfOiL3"
    Map.mapStyles = [
      {
        "featureType": "landscape",
        "stylers": [
          {
            "visibility": "on"
          },
          {
            "color": "#d9d9d9"
          }
        ]
      },
      {
        "featureType": "poi",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "road",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "transit",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "administrative.locality",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "administrative.neighborhood",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "administrative.land_parcel",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "administrative.country",
        "elementType": "labels.text.fill",
        "stylers": [
          {
            "color": "#000000"
          },
          {
            "visibility": "on"
          }
        ]
      },
      {
        "featureType": "administrative.province",
        "stylers": [
          {
            "visibility": "off"
          }
        ]
      },
      {
        "featureType": "water",
        "elementType": "geometry.fill",
        "stylers": [
          {
            "color": "#ffffff"
          },
          {
            "visibility": "on"
          }
        ]
      },
      {
        "elementType": "labels.text.fill",
        "stylers": [
          {
            "color": "#808080"
          }
        ]
      }
    ];

    return Map;

  }).call(this);

}).call(this);
